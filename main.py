# main.py
# Mod√®le SIR ‚Äì Simulation de propagation d'une √©pid√©mie
# Auteur : Mohsine ESSAT
# Description : Mod√®le √©pid√©miologique simple SIR cod√© en Python

import matplotlib.pyplot as plt 


# 1. Initialisation des param√®tres du mod√®le


# Nombre total de personnes dans la population (Ville, Pays, ect)
N = 1000

# Cas initiaux :
I = [3]
S = [997]
R = [0]

# Param√®tre du virus 
beta = 0.3 # Taux de transmition (√† quel point c'est contagieux)
gamma = 0.1 # Taux de gu√©rison ( √† quel point on gu√©rit vite)

# Nombre total de jours √† simuler
jours = 100

# 2. Simulation jour par jour
for jour in range(jours):

    # On r√©cup√®re les donn√©es du jour pr√©c√©dent (le dernier de chaque liste)
    s = S[-1]  # personnes en bonne sant√© hier
    i = I[-1]  # personnes infect√©es hier
    r = R[-1]  # personnes retir√©es (gu√©ries) hier
    
# Calcul des nouvelles infections
    # Plus il y a de malades ET de gens sains ‚Üí plus √ßa contamine
    nouvelles_infections = beta * s * i / N

# Calcul des nouvelles gu√©risons
    # Une partie des malades gu√©rissent chaque jour
    nouvelles_guerisons = gamma * i

# Mise √† jour des valeurs pour aujourd‚Äôhui (jour courant)
    s_next = s - nouvelles_infections
    i_next = i + nouvelles_infections - nouvelles_guerisons
    r_next = r + nouvelles_guerisons

    S.append(s_next)
    I.append(i_next)
    R.append(r_next)

# 3. Affichage des r√©sultats sous forme de graphique
plt.plot(S, label='üü¢ Sains')
plt.plot(I, label='üî¥ Infect√©s')
plt.plot(R, label='üîµ Gu√©ris')

# Titres et l√©gendes
plt.xlabel('Jours')
plt.ylabel('Nombre de personnes')
plt.title("Mod√®le SIR - Simulation de propaganation d'un virus")
plt.legend()
plt.show()
